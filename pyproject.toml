[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "qadence-libs"
description = "Libraries to extend Qadence functionalities."
readme = "README.md"
authors = [
    { name = "Mario Dagrada", email = "mario.dagrada@pasqal.com" },
    { name = "Roland Guichard", email = "roland.guichard@pasqal.com" },
    { name = "João Moutinho", email = "joao.moutinho@pasqal.com" },
    { name = "Vincent Elfving", email = "vincent.elfving@pasqal.com" },
    { name = "Dominik Seitz", email = "dominik.seitz@pasqal.com" },
    { name = "Niklas Heim", email = "niklas.heim@pasqal.com" },
    { name = "Ignacio Fernández Graña", email = "ignacio.fernandez-grana@pasqal.com" },
]
requires-python = ">=3.9,<3.12"
license = {text = "Apache 2.0"}
keywords = ["quantum"]
version = "0.1.2"
classifiers=[
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "torch",
    "qadence[braket, pulser, horqrux]",
]

[tool.hatch.metadata]
allow-direct-references = true
allow-ambiguous-features = true

[project.optional-dependencies]
visualization = [
  "graphviz",
]

[tool.hatch.envs.default]
dependencies = [
  "flaky",
  "hypothesis",
  "pytest",
  "pytest-cov",
  "pytest-mypy",
  "pytest-xdist",
  "ipykernel",
  "pre-commit",
  "black",
  "isort",
  "ruff",
  "pydocstringformatter",
]

features = ["visualization"]

[tool.hatch.envs.default.scripts]
test = "pytest -n auto --cov-report lcov --cov-config=pyproject.toml --cov=qadence_libs --cov=tests --ignore=./tests/test_examples.py {args}"
test-examples = "pytest ./tests/test_examples.py {args}"
no-cov = "cov --no-cov {args}"
test-docs = "mkdocs build --clean --strict"
test-all = "pytest -n auto {args}  && mkdocs build --clean --strict"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = """-vvv"""
xfail_strict = true
filterwarnings = [
  "ignore:Call to deprecated create function FieldDescriptor",
  "ignore:Call to deprecated create function Descriptor",
  "ignore:Call to deprecated create function EnumDescriptor",
  "ignore:Call to deprecated create function EnumValueDescriptor",
  "ignore:Call to deprecated create function FileDescriptor",
  "ignore:Call to deprecated create function OneofDescriptor",
  "ignore:distutils Version classes are deprecated.",
  "ignore::DeprecationWarning"
]


[tool.hatch.envs.docs]
dependencies = [
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings",
  "mkdocstrings-python",
  "mkdocs-section-index",
  "mkdocs-exclude",
  "markdown-exec",
  "mike",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict"
serve = "mkdocs serve --dev-addr localhost:8000"

[[tool.hatch.envs.test.matrix]]
python = ["39", "310"]

# [tool.hatch.envs.tests]

[tool.hatch.build.targets.sdist]
exclude = [
  "/.gitignore",
  "/.gitlab-ci-yml",
  "/.pre-commit-config.yml",
  "/tests",
  "/docs",
  "/examples",
]

[tool.hatch.build.targets.wheel]
packages = ["qadence_libs"]

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
select = ["E", "F", "I", "Q"]
extend-ignore = ["F841","F403"]
line-length = 100

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = false
ignore_missing_imports = true
